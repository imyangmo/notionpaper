---
import {
  getSiteMeta,
  getPost,
  getPostList,
  getTopics,
} from "../../components/APIHandlers";

const rt = import.meta.env.RUNTIME.split("-")[0];
const mode = import.meta.env.RUNTIME.split("-")[1];

const { id } = Astro.params;

let siteMeta;
let postListData;
let topicData;
let postData;
if (mode === "ssr") {
  const smresp = await fetch(`${Astro.url.origin}/api/sitemeta.json`);
  siteMeta = await smresp.json();

  const plresp = await fetch(`${Astro.url.origin}/api/posts.json`);
  postListData = await plresp.json();

  const tresp = await fetch(`${Astro.url.origin}/api/topics.json`);
  topicData = await tresp.json();

  const presp = await fetch(`${Astro.url.origin}/api/post/${id}.json`);
  postData = await presp.json();
} else if (mode === "ssg") {
  siteMeta = await getSiteMeta();
  postListData = await getPostList();
  topicData = await getTopics();
  postData = await getPost(id);
}

export async function getStaticPaths() {
  // const postList = getPostList.get();
  const postListData = await getPostList();
  //todo
  return postListData.map((each) => {
    return {
      params: { id: each.id },
    };
  });
}

console.log("Generating page for " + id);
const theme = import.meta.env.THEME;
const Post = (await import(`../../theme/${theme}/Post.astro`)).default;
---

<Post siteMeta={siteMeta} pageData={postData} topics={topicData} />
