---
import H1 from '../components/Blocks/H1.astro'
import H2 from '../components/Blocks/H2.astro'
import H3 from '../components/Blocks/H3.astro'
import P from '../components/Blocks/P.astro'
import Hr from '../components/Blocks/Hr.astro'
import Quote from '../components/Blocks/Quote.astro'
import Codes from '../components/Blocks/Codes.astro'
import Table from '../components/Blocks/Table.astro'
import Ol from '../components/Blocks/Ol.astro'
import Ul from '../components/Blocks/Ul.astro'
import Img from '../components/Blocks/Img.astro'
import Vid from '../components/Blocks/Vid.astro'
import VidYtb from '../components/Blocks/VidYtb.astro'
import TOC from '../components/Blocks/TOC.astro'
import Callout from '../components/Blocks/Callout.astro'


import Unsupported from './Blocks/Unsupported.astro'

import Block from './Block.astro'

const { block } = Astro.props;

// console.log("processing block:")
// console.log(block)

const switcher = (block) => {
    switch(block.type){
        case 'table_of_contents':
            return TOC;
            break;
        case 'heading_1':
            return H1;
            break;
        case 'heading_2':
            return H2;
            break;
        case 'heading_3':
            return H3;
            break;
        case 'paragraph':
            return P;
            break;
        case 'divider':
            return Hr;
            break;
        case 'quote':
            return Quote;
            break;
        case 'callout':
            return Callout;
            break;
        case 'code':
            return Codes;
            break;
        case 'table':
            return Table;
            break;
        case 'image':
        case 'image_external':
            return Img;
            break;
        case 'video':
        case 'video_external':
            return Vid;
            break;
        case 'video_youtube':
            return VidYtb;
            break;
        case 'numbered_list_item_group':
            return Ol;
            break;
        case 'bulleted_list_item_group':
            return Ul;
            break;
        default:
            return Unsupported;


}
}
const ThisComp = switcher(block)

---

<ThisComp block= { block }></ThisComp>
{
    block.children != false
    ?
    <div style="padding-left: 2vw;">
        {
            block.children.map((item) => <Block block={item}></Block>)
        }
    </div>
    
    :
    null
}